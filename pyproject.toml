[tool.poetry]
name = "patry"
version = "0.1.0"
description = "Money as a CLI"
authors = ["Nebil Kawas <nebil@hey.com>"]
license = "MPL-2.0"
readme = "README.md"
repository = "https://github.com/nebil/patry"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
httpx = "~0.27"
playwright = "~1.41"
python-dotenv = "~1.0"
pyxirr = "~0.10"
rich = "~13.7"
typing-extensions = { version = "~4.10", python = "<3.11" }

[tool.poetry.group.dev.dependencies]
black = "~24.2"
mypy = "~1.8"
ruff = "~0.1"

[tool.black]
preview = true
exclude = '\.venv'
line-length = 99
target-version = ["py310"]

[tool.mypy]
exclude = ['\.venv']

[tool.ruff]
target-version = "py310"
line-length = 99
preview = true
select = [
  "F",    # Pyflakes
  "E",    # pycodestyle (error)
  "W",    # pycodestyle (warning)
  "C90",  # mccabe
  "I",    # isort
  "N",    # pep8-naming
  "UP",   # pyupgrade
  "YTT",  # flake8-2020
  "ANN",  # flake8-annotations
  "S",    # flake8-bandit
  "BLE",  # flake8-blind-except
  "B",    # flake8-bugbear
  "A",    # flake8-builtins
  "C4",   # flake8-comprehensions
  "T10",  # debugger
  "FA",   # flake8-future-annotations
  "ISC",  # flake8-implicit-str-concat
  "G",    # flake8-logging-format
  "PIE",  # flake8-pie
  "T20",  # flake8-print
  "RSE",  # flake8-raise
  "RET",  # flake8-return
  "SIM",  # flake8-simplify
  "TID",  # flake8-tidy-imports
  "TCH",  # flake8-type-checking
  "ARG",  # flake8-unused-arguments
  "PTH",  # flake8-use-pathlib
  "PL",   # Pylint
  "TRY",  # tryceratops
  "PERF", # Perflint
  "FURB", # refurb
  "RUF",  # Ruff-specific
]

ignore = ["ANN0", "ANN1", "PTH123", "FURB140"]

[tool.poetry.scripts]
patry = 'patry.__main__:entrypoint'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
